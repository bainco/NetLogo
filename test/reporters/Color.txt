WrapColor1
  wrap-color 150 => 10

WrapColor2
  wrap-color -10 => 130

WrapColor3
  wrap-color 0 => 0

WrapColor4
  wrap-color 0.0 => 0

WrapColor5
  wrap-color 150.0 => 10

WrapColor6
  wrap-color -10.0 => 130

Shade1
  shade-of? blue red => false

Shade2
  shade-of? blue (blue + 1) => true

Shade3
  shade-of? gray white => true

ScaleColor1
  scale-color red 5 0 10 => 15

ScaleColor2
  scale-color red 0 0 10 => 10

ScaleColor3
  scale-color red 10 0 10 => 19.9999

ScaleColor4
  scale-color red 10.001 0 10 => 19.9999

ScaleColor5
  scale-color red -0.001 0 10 => 10

ScaleColor6
  scale-color blue 16 10 20 => 106

ScaleColor7
  scale-color blue 16 20 10 => 104

ScaleColor8
  scale-color red 0.9999999999999998 0 1 => 19.9999

HSB1
  approximate-hsb 0 0 0 => 0

HSB2
  n-values 1400 [[x] -> x / 10] = map [[l] -> approximate-hsb (item 0 l) (item 1 l) (item 2 l)] map extract-hsb n-values 1400 [[x] -> x / 10] => true

HSB3
  length remove-duplicates map [[y] -> map [[x] -> round (255 * x)] extract-rgb y] n-values 14 [[x] -> 10 * x] => 14

HSB4
  length remove-duplicates map [[y] -> map [[x] -> round (255 * x)] extract-rgb y] n-values 14 [[x] -> 10 * x + 9.9] => 14

HSB5
  length remove-duplicates map [[x] -> extract-hsb x] n-values 1400 [[x] -> x / 10] => 1400

# Use blue for tests, but really testing reflexivity of things
HSB6
  approximate-hsb 218.974 69.231 66.275 => 105
  extract-hsb 105 => [218.974 69.231 66.275]
  extract-hsb extract-rgb blue = extract-hsb blue => true

# Confirmed with outside site
HSB7
  hsb 218.974 69.231 66.275 => [52 93 169]

RGB1
  approximate-rgb 0 0 0 => 0

RGB2
  n-values 1400 [[x] -> x / 10] = map [[l] -> approximate-rgb (item 0 l) (item 1 l) (item 2 l)] map extract-rgb n-values 1400 [[x] -> x / 10] => true

RGB3
  length remove-duplicates map [[y] -> map [[x] -> round (255 * x)] extract-rgb y] n-values 14 [[x] -> 10 * x] => 14

RGB4
  length remove-duplicates map [[y] -> map [[x] -> round (255 * x)] extract-rgb y] n-values 14 [[x] -> 10 * x + 9.9] => 14

RGB5
  length remove-duplicates map extract-rgb n-values 1400 [[x] -> x / 10] => 1400

BaseColors
  base-colors = n-values 14 [[x] -> x * 10 + 5] => true

SimpleHSB
  hsb  -1 -83  -9 => [0 0 0]
  hsb   0   0   0 => [0 0 0]
  hsb   1   1   1 => [3 3 3]
  hsb 360 100 100 => [255 0 0]
  hsb 367 110 143 => [255 0 0]
  hsb 360  50 100 => [255 128 128]
  hsb 360   0 100 => [255 255 255]
  hsb 360 -10 100 => [255 255 255]
  hsb 360   0   0 => [0 0 0]
  hsb 255  45  34 => [57 48 87]
  hsb 357  59  64 => [163 67 72]

SimpleRGB
  rgb  -1 -83  -9 => [0 0 0]
  rgb   0   0   0 => [0 0 0]
  rgb   1   1   1 => [1 1 1]
  rgb 255 255 255 => [255 255 255]
  rgb 260 257 372 => [255 255 255]
  rgb 255 120 255 => [255 120 255]
  rgb 255   0 255 => [255 0 255]
  rgb 255 -15 255 => [255 0 255]
  rgb 255   0   0 => [255 0 0]
  rgb 201  45  34 => [201 45 34]
  rgb 157  59  64 => [157 59 64]
